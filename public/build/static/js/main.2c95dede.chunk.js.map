{"version":3,"sources":["svgs/undraw_page_not_found.svg","images/recocare.png","components/Header.tsx","images/cosme.png","svgs/undraw_reading.svg","svgs/cracker.svg","components/Top.tsx","components/Product.tsx","components/Forms/CategoryRadio.tsx","components/Forms/PriceRadio.tsx","components/Forms/WorryCheckbox.tsx","svgs/undraw_choose.svg","components/QuestionForm.tsx","components/PaginateBtn.tsx","images/logo.png","svgs/ranking1.svg","svgs/ranking2.svg","svgs/ranking3.svg","components/Ranking.tsx","components/ScrollToTop.tsx","components/Tracking.jsx","App.tsx","reportWebVitals.js","index.tsx","MainStyles.module.css"],"names":["Header","Helmet","property","content","name","my","justifyContent","as","href","_hover","cursor","src","HeaderImage","Top","url","process","useSWR","arg","fetch","then","res","json","data","error","className","styles","topMessage","fontSize","position","left","transform","w","CosmeImage","h","maxH","objectFit","m","CrackerSvg","toLocaleString","lineHeight","mt","mb","ReadingSvg","to","primaryBtn","colorScheme","height","width","size","Product","history","useHistory","id","useParams","createdDate","created_at","date","Date","getFullYear","getMonth","getDate","linkWrap","fontWeight","affiliate_url","isExternal","medium_image_url","alt","borderRadius","textAlign","variant","mx","price","style","currency","caption","onClick","goBack","pt","pb","startColor","endColor","CategoryRadio","props","category","setCategory","setCategories","useEffect","isRequired","borderBottom","value","onChange","e","onChangeRadio","templateColumns","columnGap","rowGap","map","genre","align","PriceRadio","setPrice","priceList","useMemo","p","Number","WorryCheckbox","worry","setWorry","setWorries","onChangeCheckbox","index","indexOf","target","checked","splice","effect","isChecked","includes","String","QuestionForm","location","useLocation","toast","useToast","useState","categories","worries","state","effects","ChooseSvg","spacing","length","status","title","duration","isClosable","push","pathname","genreName","find","cate","genre_id","filter","effectNames","wo","PaginateBtn","currentPage","lastPage","changePage","Ranking","itemPerPage","parseInt","setData","items","setItems","setCurrentPage","setLastPage","setError","paramData","param","method","headers","body","JSON","stringify","slice","Math","floor","catch","err","page","current","key","window","scrollTo","join","item","maxW","ml","alignItems","Ranking1","Ranking2","Ranking3","fallbackSrc","Logo","recommend","row","i","display","background","color","py","px","mr","effective","ingredient","float","verticalAlign","Array","ScrollToTop","Tracking","listen","trackingId","gtag","page_path","console","log","App","mainFontStyle","exact","path","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2c95dede.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_page_not_found.a9992cb1.svg\";","export default __webpack_public_path__ + \"static/media/recocare.a5862f25.png\";","import { Flex, Box } from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Helmet } from \"react-helmet\";\n\nimport HeaderImage from \"../images/recocare.png\";\n\nexport const Header = () => {\n  return (\n    <>\n      <Helmet>\n        <meta property=\"og:url\" content=\"http://localhost:3000\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content=\"Recocare\" />\n        <meta\n          property=\"og:description\"\n          content=\"お気に入りのスキンケアを見つけよう！あなたに合わせたオリジナルランキングを紹介\"\n        />\n        <meta property=\"og:site_name\" content=\"Recocare\" />\n        <meta property=\"og:image\" content=\"http://localhost:3000/build/static/media/logo.ac6a0467.png\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n      </Helmet>\n      <Flex my=\"8\" justifyContent=\"center\">\n        <Box as=\"a\" href=\"/\" _hover={{ cursor: \"pointer\" }}>\n          <Image src={HeaderImage} />\n        </Box>\n      </Flex>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cosme.52db0d68.png\";","export default __webpack_public_path__ + \"static/media/undraw_reading.097b3ba7.svg\";","export default __webpack_public_path__ + \"static/media/cracker.92b79960.svg\";","import useSWR from \"swr\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Center } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\n\nimport styles from \"../MainStyles.module.css\";\nimport CosmeImage from \"../images/cosme.png\";\nimport ReadingSvg from \"../svgs/undraw_reading.svg\";\nimport CrackerSvg from \"../svgs/cracker.svg\";\n\nexport const Top = () => {\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/count`;\n  const fetcher = (arg: string): Promise<number> => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <>\n      <Center className={styles.topMessage}>\n        <Box as=\"h1\" fontSize=\"1.1em\">\n          お気に入りスキンケアを見つけよう\n        </Box>\n      </Center>\n      <Box my=\"20\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\">\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n      {data ? (\n        <Center>\n          <Image src={CrackerSvg} w=\"14\" />\n          <Box fontSize=\"xl\">登録商品数 {data.toLocaleString()} 点</Box>\n          <Image src={CrackerSvg} w=\"14\" />\n        </Center>\n      ) : (\n        \"\"\n      )}\n      <Center>\n        <Box>商品随時追加中！</Box>\n      </Center>\n      <Box lineHeight=\"2.5em\" mt=\"6em\">\n        どれが自分に自分にあっているか分からない。\n        <br />\n        商品があり過ぎて探すのが疲れる。\n        <br />\n        悩みを解消できる商品を効率的に見つけたい。\n        <br />\n        <br />\n        そのように考えた事はありませんか？\n        <br />\n        ３つの質問に答えるだけで、あなたの合わせたランキングを紹介します!\n      </Box>\n      <Box mt=\"20\" mb=\"7em\">\n        <Image src={ReadingSvg} />\n      </Box>\n      <Center>\n        <Link to=\"/question\">\n          <Button className={styles.primaryBtn} colorScheme=\"red500\" height=\"65px\" width=\"200px\" size=\"lg\">\n            やってみる\n          </Button>\n        </Link>\n      </Center>\n      <Box mt=\"7em\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\">\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n    </>\n  );\n};\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { Link } from \"@chakra-ui/react\";\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { SkeletonText } from \"@chakra-ui/skeleton\";\nimport { ArrowBackIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\n\nimport styles from \"../MainStyles.module.css\";\nimport { Image } from \"@chakra-ui/image\";\n\ntype ProductType = {\n  created_at: string;\n  name: string;\n  medium_image_url: string;\n  price: number;\n  affiliate_url: string;\n  caption: string;\n};\n\nexport const Product = () => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/product/${id}`;\n  const fetcher = (arg: string) => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR<ProductType>(url, fetcher);\n\n  let createdDate = \"\";\n  if (data && data.created_at) {\n    const date = new Date(data.created_at);\n    createdDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\n  }\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n  if (!data) return <SkeletonText mt=\"10\" mb=\"10\" pt=\"5\" pb=\"5\" startColor=\"red.300\" endColor=\"red.100\"></SkeletonText>;\n\n  return (\n    <>\n      <Box className={styles.linkWrap}>\n        <Center as=\"h1\" fontSize=\"xl\">\n          商品詳細\n        </Center>\n        <Box mt=\"5\" fontWeight=\"bold\">\n          商品名\n        </Box>\n        <Link href={data.affiliate_url} isExternal={true}>\n          <Box>{data.name}</Box>\n          <Box mt=\"3\" mb=\"1\">\n            <Image\n              src={data.medium_image_url}\n              alt={data.name}\n              objectFit=\"contain\"\n              w=\"100%\"\n              h=\"10em\"\n              borderRadius=\"lg\"\n            />\n          </Box>\n          <Box my=\"5\" textAlign={\"center\"}>\n            <Button colorScheme=\"red\" variant=\"outline\">\n              楽天で見る\n              <ExternalLinkIcon mx=\"2px\" />\n            </Button>\n          </Box>\n        </Link>\n        <Box>\n          <Box fontWeight=\"bold\">価格</Box>\n          <Box>\n            {data.price.toLocaleString(\"ja-JP\", {\n              style: \"currency\",\n              currency: \"JPY\",\n            })}\n          </Box>\n        </Box>\n        <Box mt=\"3\">\n          <Box fontWeight=\"bold\">登録日</Box>\n          <Box>{createdDate}</Box>\n        </Box>\n        <Box fontWeight=\"bold\">商品説明</Box>\n        <Box>{data.caption}</Box>\n      </Box>\n      <Center mt=\"10\" className={styles.linkWrap}>\n        <Link size=\"lg\" mb=\"10\" variant=\"link\" onClick={() => history.goBack()}>\n          <ArrowBackIcon w=\"7\" h=\"7\" />\n          ランキングに戻る\n        </Link>\n      </Center>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { GridItem } from \"@chakra-ui/layout\";\nimport { Radio, RadioGroup } from \"@chakra-ui/radio\";\nimport { Center } from \"@chakra-ui/react\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { Grid } from \"@chakra-ui/react\";\n\ntype Props = {\n  category: string;\n  setCategory: (e: string) => void;\n  setCategories: (e: Genre[]) => void;\n};\n\ntype Genre = {\n  id: string;\n  genre_id: string;\n  name: string;\n};\n\nexport const CategoryRadio = (props: Props) => {\n  const { category, setCategory, setCategories } = props;\n\n  const onChangeRadio = (e: string) => setCategory(e);\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/genre`;\n  const fetcher = (arg: string): Promise<Genre[]> => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  useEffect(() => {\n    if (data) setCategories(data);\n  }, [data, setCategories]);\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <FormControl isRequired mt=\"5\">\n      <FormLabel as=\"legend\" mb=\"5\" borderBottom=\"solid 1px #ccc\">\n        どの種類の商品をお探しですか？\n      </FormLabel>\n      {data ? (\n        <RadioGroup name=\"category\" value={category} onChange={(e) => onChangeRadio(e)}>\n          <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3}>\n            {data.map((genre) => (\n              <GridItem key={genre.id}>\n                <Radio value={genre[\"genre_id\"]} colorScheme=\"orange\">\n                  {genre[\"name\"]}\n                </Radio>\n              </GridItem>\n            ))}\n          </Grid>\n        </RadioGroup>\n      ) : (\n        <Center align=\"center\">\n          <Spinner />\n        </Center>\n      )}\n    </FormControl>\n  );\n};\n","import { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Radio, RadioGroup } from \"@chakra-ui/radio\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\n\ntype Props = {\n  price: string;\n  setPrice: (e: string) => void;\n};\n\nexport const PriceRadio = (props: Props) => {\n  const { price, setPrice } = props;\n\n  const priceList = useMemo(\n    () => [\"1000\", \"2000\", \"3000\", \"5000\", \"7000\", \"10000\", \"20000\"],\n    []\n  );\n\n  const onChangeRadio = (e: string) => setPrice(e);\n\n  return (\n    <FormControl mt=\"5\">\n      <FormLabel as=\"legend\" mb=\"5\" borderBottom=\"solid 1px #ccc\">\n        ご予算はどれくらいですか？\n      </FormLabel>\n\n      <RadioGroup name=\"price\" value={price} onChange={(e) => onChangeRadio(e)}>\n        <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3}>\n          {priceList.map((p) => (\n            <GridItem key={p}>\n              <Radio value={p} colorScheme=\"orange\">\n                ～\n                {Number(p).toLocaleString(\"ja-JP\", {\n                  style: \"currency\",\n                  currency: \"JPY\",\n                })}\n              </Radio>\n            </GridItem>\n          ))}\n        </Grid>\n      </RadioGroup>\n    </FormControl>\n  );\n};\n","import useSWR from \"swr\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Checkbox } from \"@chakra-ui/checkbox\";\nimport { Center } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\n\ntype Props = {\n  worry: string[];\n  setWorry: (e: string[]) => void;\n  setWorries: (e: Effect[]) => void;\n};\n\ntype Effect = {\n  id: string;\n  name: string;\n};\n\nexport const WorryCheckbox = (props: Props) => {\n  const { worry, setWorry, setWorries } = props;\n\n  const onChangeCheckbox = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const index = worry.indexOf(e.target.value);\n    let checked = [];\n    if (index < 0) {\n      checked = [...worry, e.target.value];\n      setWorry(checked);\n    } else {\n      checked = worry;\n      checked.splice(index, 1);\n      setWorry([...checked]);\n    }\n  };\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/effect`;\n  const fetcher = (arg: string): Promise<Effect[]> => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  useEffect(() => {\n    if (data) setWorries(data);\n  }, [data, setWorries]);\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <FormControl isRequired mt=\"5\">\n      <FormLabel as=\"legend\" mb=\"5\" borderBottom=\"solid 1px #ccc\">\n        スキンケアに関してお悩みはありますか？\n      </FormLabel>\n      {data ? (\n        <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3}>\n          {data.map((effect) => (\n            <GridItem key={effect[\"id\"]} value={worry}>\n              <Checkbox\n                colorScheme=\"orange\"\n                value={effect[\"id\"]}\n                onChange={onChangeCheckbox}\n                isChecked={worry.includes(String(effect[\"id\"]))}\n              >\n                {effect[\"name\"]}\n              </Checkbox>\n            </GridItem>\n          ))}\n        </Grid>\n      ) : (\n        <Center align=\"center\">\n          <Spinner />\n        </Center>\n      )}\n    </FormControl>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/undraw_choose.6957b11e.svg\";","import { useEffect, useState } from \"react\";\nimport { Center, Box, VStack } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Image } from \"@chakra-ui/image\";\n\nimport styles from \"../MainStyles.module.css\";\nimport { CategoryRadio } from \"./Forms/CategoryRadio\";\nimport { PriceRadio } from \"./Forms/PriceRadio\";\nimport { WorryCheckbox } from \"./Forms/WorryCheckbox\";\nimport ChooseSvg from \"../svgs/undraw_choose.svg\";\nimport CosmeImage from \"../images/cosme.png\";\n\ntype Genre = {\n  id: string;\n  genre_id: string;\n  name: string;\n};\n\ntype Effect = {\n  id: string;\n  name: string;\n};\n\ntype Location = {\n  genre: string;\n  price: string;\n  effects: string[];\n};\n\ntype History =\n  | string\n  | {\n      genre: string;\n      genreName: string;\n      effects: string[];\n      effectNames: string[];\n      price: string;\n    };\n\nexport const QuestionForm = () => {\n  const history = useHistory<History>();\n  const location = useLocation<Location>();\n  const toast = useToast();\n  const [category, setCategory] = useState<string>(\"\");\n  const [categories, setCategories] = useState<Genre[]>();\n  const [worry, setWorry] = useState<string[]>([\"\"]);\n  const [worries, setWorries] = useState<Effect[]>();\n  const [price, setPrice] = useState(\"\");\n\n  useEffect(() => {\n    if (location.state) {\n      if (location.state.genre) setCategory(location.state.genre);\n      if (location.state.price) setPrice(location.state.price);\n      if (location.state.effects) setWorry(location.state.effects);\n    }\n  }, [location.state]);\n\n  const checkAnswer = () => {\n    if (category === \"\" || worry.length === 0) {\n      toast({\n        status: \"warning\",\n        variant: \"top-accent\",\n        title: \"必須項目が未選択です。\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } else {\n      history.push({\n        pathname: \"/ranking\",\n        state: {\n          genre: category,\n          genreName: categories!.find((cate) => cate!.genre_id === category)!.name,\n          effects: worry.filter((w) => w),\n          effectNames: worries!.map((wo) => worry!.includes(String(wo.id)) && wo.name).filter((wo) => wo) as string[],\n          price: price,\n        },\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Center as=\"h1\" my=\"3\" fontSize=\"1.5em\">\n          アンケートフォーム\n        </Center>\n        <Box my=\"3em\">\n          <Image src={ChooseSvg} my={10} w=\"100vw\" objectFit=\"contain\" />\n        </Box>\n        <VStack spacing={12}>\n          <CategoryRadio category={category} setCategory={setCategory} setCategories={setCategories} />\n          <WorryCheckbox worry={worry} setWorry={setWorry} setWorries={setWorries} />\n          <PriceRadio price={price} setPrice={setPrice} />\n        </VStack>\n      </Box>\n      <Center mt=\"5em\">\n        <Button\n          className={styles.primaryBtn}\n          colorScheme=\"red500\"\n          height=\"65px\"\n          width=\"200px\"\n          size=\"lg\"\n          onClick={checkAnswer}\n        >\n          回答する\n        </Button>\n      </Center>\n      <Box my=\"20\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\">\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n    </>\n  );\n};\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Flex, Box, Link } from \"@chakra-ui/react\";\n\nimport styles from \"../MainStyles.module.css\";\n\ntype Props = {\n  currentPage: number;\n  lastPage: number;\n  changePage: (page: number) => void;\n};\n\nexport const PaginateBtn = (props: Props) => {\n  const { currentPage, lastPage, changePage } = props;\n\n  return (\n    <Flex justifyContent=\"space-between\" className={styles.linkWrap}>\n      {currentPage !== 1 ? (\n        <Link onClick={() => changePage(currentPage - 1)}>\n          <ChevronLeftIcon w=\"7\" h=\"7\" />\n          前へ\n        </Link>\n      ) : (\n        <Box></Box>\n      )}\n      {currentPage < lastPage ? (\n        <Link onClick={() => changePage(currentPage + 1)}>\n          次へ\n          <ChevronRightIcon w=\"7\" h=\"7\" />\n        </Link>\n      ) : (\n        <Box></Box>\n      )}\n    </Flex>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.ac6a0467.png\";","export default __webpack_public_path__ + \"static/media/ranking1.69644418.svg\";","export default __webpack_public_path__ + \"static/media/ranking2.d72fce91.svg\";","export default __webpack_public_path__ + \"static/media/ranking3.0ce64a92.svg\";","import { useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\nimport { Link as CLink } from \"@chakra-ui/layout\";\nimport { Box, Center, Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { SkeletonText } from \"@chakra-ui/skeleton\";\nimport { Image } from \"@chakra-ui/image\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\n\nimport { PaginateBtn } from \"./PaginateBtn\";\nimport Logo from \"..//images/logo.png\";\nimport Ranking1 from \"../svgs/ranking1.svg\";\nimport Ranking2 from \"../svgs/ranking2.svg\";\nimport Ranking3 from \"../svgs/ranking3.svg\";\nimport { Divider } from \"@chakra-ui/react\";\nimport styles from \"../MainStyles.module.css\";\n\ntype Location = {\n  genre: string;\n  price: string;\n  effects: string[];\n  genreName: string;\n  effectNames: string[];\n};\n\ntype History =\n  | string\n  | {\n      genre: string;\n      effects: string[];\n      price: string;\n    };\n\ntype Item = {\n  id: string;\n  name: string;\n  medium_image_url: string;\n  recommend: {\n    effective: string;\n    ingredient: string;\n  }[];\n  price: number;\n};\n\nexport const Ranking = () => {\n  const history = useHistory<History>();\n  const location = useLocation<Location>();\n  const itemPerPage: number = parseInt(process.env.REACT_APP_ITEM_PER_PAGE as string, 10);\n\n  const [data, setData] = useState<Item[]>([]);\n  const [items, setItems] = useState<Item[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [lastPage, setLastPage] = useState<number>();\n  const [error, setError] = useState(null);\n\n  const url = useMemo(() => `${process.env.REACT_APP_BACKEND_HOST}api/ranking`, []);\n\n  const paramData = useMemo(() => {\n    return {\n      genre: location.state.genre,\n      effects: location.state.effects,\n      price: location.state.price,\n    };\n  }, [location]);\n  const param = useMemo(() => {\n    return {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(paramData),\n    };\n  }, [paramData]);\n\n  useEffect(() => {\n    fetch(url, param)\n      .then((res) => res.json())\n      .then((json) => {\n        setError(json.error);\n        setData(json.data);\n        setItems(json.data.slice(0, itemPerPage));\n        setLastPage(Math.floor(json.data.length / itemPerPage));\n      })\n      .catch((err) => setError(err));\n  }, [url, param, itemPerPage]);\n\n  const changePage = (page: number) => {\n    let current: Item[] = [];\n    for (let key in data) {\n      const index = parseInt(key, 10) as number;\n      if (index > (page - 1) * itemPerPage && index <= page * itemPerPage) current.push(data[key]);\n    }\n    setItems(current);\n\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  const goBack = () => {\n    history.push({\n      pathname: \"/question\",\n      state: {\n        genre: location.state.genre,\n        effects: location.state.effects,\n        price: location.state.price,\n      },\n    });\n  };\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  if (data.length === 0 && !error)\n    return (\n      <Box>\n        <Center>ランキング作成中です…</Center>\n        {[...Array(10)].map((value, index) => (\n          <SkeletonText\n            key={index}\n            mt=\"10\"\n            mb=\"10\"\n            pt=\"5\"\n            pb=\"5\"\n            startColor=\"red.300\"\n            endColor=\"red.100\"\n          ></SkeletonText>\n        ))}\n      </Box>\n    );\n\n  return (\n    <>\n      <Box>\n        <Center as=\"h1\" fontSize=\"xl\">\n          おすすめランキング\n        </Center>\n        <Box fontSize=\"sm\" my=\"5\">\n          <Box fontWeight=\"bold\">回答内容</Box>\n          <Flex mx=\"1\">\n            <Box w=\"5em\">カテゴリ：</Box>\n            <Box>{location.state.genreName}</Box>\n          </Flex>\n          <Flex mx=\"1\">\n            <Box w=\"5em\">悩み：</Box>\n            <Box>{location.state.effectNames.join(\"/\")}</Box>\n          </Flex>\n          <Flex mx=\"1\">\n            <Box w=\"5em\">ご予算：</Box>\n            <Box>\n              〜\n              {Number(location.state.price).toLocaleString(\"ja-JP\", {\n                style: \"currency\",\n                currency: \"JPY\",\n              })}\n            </Box>\n          </Flex>\n        </Box>\n        {error ? error : \"\"}\n        {data.length === 0 ? (\n          <Center my=\"10\">該当なし</Center>\n        ) : (\n          <>\n            <Box fontSize={\"sm\"} mt=\"2\">\n              {data.length}件ヒットしました!\n            </Box>\n            <Box my=\"3\">\n              <PaginateBtn currentPage={currentPage} lastPage={lastPage!} changePage={changePage} />\n            </Box>\n            <Box borderBottom=\"solid 1px #ccc\" w=\"6em\" textAlign=\"center\" mx=\"auto\" fontSize=\"sm\">\n              {(currentPage - 1) * itemPerPage + 1}〜{currentPage * itemPerPage} 位\n            </Box>\n            {items.map((item, index) => (\n              <Box key={index}>\n                <Center my=\"12\" maxW=\"30em\" mx=\"auto\">\n                  <Box ml=\"5\" maxW=\"30em\">\n                    <Flex mb=\"2\" justifyContent=\"space-between\" alignItems=\"center\">\n                      {currentPage === 1 && index === 0 ? (\n                        <Box>\n                          <Image w=\"12\" h=\"12\" src={Ranking1} />\n                        </Box>\n                      ) : currentPage === 1 && index === 1 ? (\n                        <Box>\n                          <Image w=\"10\" h=\"10\" src={Ranking2} />\n                        </Box>\n                      ) : currentPage === 1 && index === 2 ? (\n                        <Box>\n                          <Image w=\"10\" h=\"10\" src={Ranking3} />\n                        </Box>\n                      ) : (\n                        <Box fontWeight=\"bold\">{(currentPage - 1) * itemPerPage + index + 1} 位</Box>\n                      )}\n                    </Flex>\n                    <Link to={\"/product/\" + item.id}>\n                      <Box>{item.name}</Box>\n                      <Box textAlign=\"right\">\n                        <Button colorScheme=\"orange\" size=\"sm\" variant=\"link\">\n                          詳細を見る\n                        </Button>\n                      </Box>\n                      <Box mt=\"3\" mb=\"1\">\n                        <Image\n                          src={item.medium_image_url}\n                          fallbackSrc={Logo}\n                          alt={item.name}\n                          objectFit=\"contain\"\n                          w=\"100%\"\n                          h=\"10em\"\n                          borderRadius=\"lg\"\n                        />\n                      </Box>\n                    </Link>\n                    {item.recommend.map((row, i) => (\n                      <Box key={row.ingredient + i} my=\"3\">\n                        <Box\n                          display=\"inline\"\n                          background=\"gray.400\"\n                          fontWeight=\"bold\"\n                          color=\"#fff\"\n                          py=\"1\"\n                          px=\"3\"\n                          mr=\"1\"\n                          borderRadius=\"full\"\n                        >\n                          {row.effective}\n                        </Box>\n                        の対策におすすめ\n                        <br />\n                        <Box display=\"inline\" borderBottom=\"2px solid orange\">\n                          {row.ingredient}\n                        </Box>{\" \"}\n                        配合\n                      </Box>\n                    ))}\n                    <Box fontSize=\"sm\" float=\"right\">\n                      {item.price.toLocaleString(\"ja-JP\", {\n                        style: \"currency\",\n                        currency: \"JPY\",\n                      })}\n                    </Box>\n                  </Box>\n                </Center>\n                <Divider />\n              </Box>\n            ))}\n            <Box mt=\"10\">\n              <PaginateBtn currentPage={currentPage} lastPage={lastPage!} changePage={changePage} />\n            </Box>\n          </>\n        )}\n        <Center my=\"5em\" className={styles.linkWrap}>\n          <CLink variant=\"link\" onClick={goBack}>\n            <ArrowBackIcon w=\"5\" h=\"5\" verticalAlign=\"sub\" fontSize=\"sm\" />\n            アンケートフォームへ戻る\n          </CLink>\n        </Center>\n      </Box>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import { useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nexport const Tracking = (props) => {\n  const { listen } = useHistory();\n  const { trackingId } = props;\n\n  useEffect(() => {\n    const unlisten = listen((location) => {\n      if (!window.gtag) return\n      if (!trackingId) {\n        console.log(\n          'Tracking not enabled, as `trackingId` was not given and there is no `GA_MEASUREMENT_ID`.'\n        )\n        return\n      }\n      window.gtag('config', trackingId, { page_path: location.pathname })\n    })\n    return unlisten;\n  }, [trackingId, listen])\n\n  return null;\n};\n","import { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport { ChakraProvider, Container, Center } from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\n\nimport styles from \"./MainStyles.module.css\";\nimport NotFound from \"./svgs/undraw_page_not_found.svg\";\nimport { Header } from \"./components/Header\";\nimport { Top } from \"./components/Top\";\nimport { Product } from \"./components/Product\";\nimport { QuestionForm } from \"./components/QuestionForm\";\nimport { Ranking } from \"./components/Ranking\";\nimport { ScrollToTop } from \"./components/ScrollToTop\";\nimport { Tracking } from \"./components/Tracking\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Header />\n      <Container className={styles.mainFontStyle} w=\"100%\">\n        <BrowserRouter>\n          <Tracking trackingId=\"G-YNY7NS9MHW\" />\n          <ScrollToTop />\n          <Switch>\n            <Route exact path=\"/\">\n              <Top />\n            </Route>\n            <Route exact path=\"/question\">\n              <QuestionForm />\n            </Route>\n            <Route path=\"/ranking\">\n              <Ranking />\n            </Route>\n            <Route path=\"/product/:id\">\n              <Product />\n            </Route>\n            <Route path=\"*\">\n              <Center mt=\"20\">ページが見つかりません！</Center>\n              <Center mt=\"20\">\n                <Image src={NotFound} />\n              </Center>\n              <Center mt=\"20\">\n                <Link to=\"/\">トップへ</Link>\n              </Center>\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFontStyle\":\"MainStyles_mainFontStyle__1iDbE\",\"linkWrap\":\"MainStyles_linkWrap__12Z35\",\"featureInactive\":\"MainStyles_featureInactive__3fVON\",\"nowrap\":\"MainStyles_nowrap__LBgJZ\",\"flexGrow\":\"MainStyles_flexGrow__3rUky\",\"topMessage\":\"MainStyles_topMessage__PIzrV\",\"primaryBtn\":\"MainStyles_primaryBtn__xauWd\"};"],"sourceRoot":""}