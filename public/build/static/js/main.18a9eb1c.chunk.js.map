{"version":3,"sources":["svgs/undraw_page_not_found.svg","images/recosk.png","components/Header.jsx","images/cosme.png","svgs/undraw_reading.svg","svgs/cracker.svg","components/Top.jsx","components/Product.jsx","components/Forms/CategoryRadio.jsx","components/Forms/PriceRadio.jsx","components/Forms/WorryCheckbox.jsx","svgs/undraw_choose.svg","components/QuestionForm.jsx","components/PaginateBtn.jsx","images/logo.png","svgs/ranking1.svg","svgs/ranking2.svg","svgs/ranking3.svg","components/Ranking.jsx","components/ScrollToTop.jsx","components/Tracking.jsx","App.js","reportWebVitals.js","index.js","MainStyles.module.css"],"names":["Header","my","justifyContent","as","href","_hover","cursor","src","HeaderImage","Top","url","process","useSWR","arg","fetch","then","res","json","data","error","className","styles","topMessage","fontSize","position","left","transform","w","CosmeImage","h","maxH","objectFit","m","CrackerSvg","toLocaleString","lineHeight","mt","mb","ReadingSvg","to","primaryBtn","colorScheme","height","width","size","Product","history","useHistory","id","useParams","createdDate","created_at","date","Date","getFullYear","getMonth","getDate","fontWeight","name","p","flexGrow","medium_image_url","alt","price","style","currency","textAlign","rakuten_url","isExternal","variant","mx","caption","onClick","goBack","pt","pb","startColor","endColor","CategoryRadio","props","category","setCategory","setCategories","useEffect","isRequired","borderBottom","value","onChange","e","onChangeRadio","templateColumns","columnGap","rowGap","map","genre","align","PriceRadio","setPrice","priceList","useMemo","Number","WorryCheckbox","worry","setWorry","setWorries","onChangeCheckbox","index","indexOf","target","checked","splice","effect","isChecked","includes","String","QuestionForm","location","useLocation","toast","useToast","useState","categories","worries","state","effects","ChooseSvg","spacing","length","push","pathname","genreName","find","cate","genre_id","effectNames","wo","filter","status","title","duration","isClosable","PaginateBtn","currentPage","lastPage","changePage","Ranking","setData","currentData","setCurrentData","setCurrentPage","setLastPage","setError","paramData","param","method","headers","body","JSON","stringify","slice","Math","floor","catch","err","page","current","key","window","scrollTo","join","item","maxW","ml","alignItems","Ranking1","Ranking2","Ranking3","small_image_url","fallbackSrc","Logo","borderRadius","recomend","reco","display","background","color","py","px","mr","effective","ingredient","float","verticalAlign","Array","ScrollToTop","Tracking","listen","trackingId","gtag","page_path","console","log","App","mainFontStyle","exact","path","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18a9eb1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_page_not_found.a9992cb1.svg\";","export default __webpack_public_path__ + \"static/media/recosk.ef5933a8.png\";","import { Flex, Box } from \"@chakra-ui/react\";\nimport { Image } from \"@chakra-ui/image\";\nimport HeaderImage from '../images/recosk.png';\n\nexport const Header = () => {\n\n  return (\n    <Flex\n      my=\"8\"\n      justifyContent=\"center\"\n    >\n      <Box as=\"a\" href=\"/\" _hover={{ cursor: \"pointer\" }}>\n        <Image src={HeaderImage} />\n      </Box>\n    </Flex>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cosme.52db0d68.png\";","export default __webpack_public_path__ + \"static/media/undraw_reading.097b3ba7.svg\";","export default __webpack_public_path__ + \"static/media/cracker.92b79960.svg\";","import useSWR from \"swr\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Link } from \"react-router-dom\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Center } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\n\nimport styles from \"../MainStyles.module.css\";\nimport CosmeImage from '../images/cosme.png'\nimport ReadingSvg from '../svgs/undraw_reading.svg';\nimport CrackerSvg from '../svgs/cracker.svg';\n\nexport const Top = () => {\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/count`;\n  const fetcher = (arg) => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <>\n      <Center className={styles.topMessage}>\n        <Box as=\"h1\" fontSize=\"1.1em\">\n          お気に入りスキンケアを見つけよう\n        </Box>\n      </Center>\n      <Box my=\"20\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\" >\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n      {data ? (\n        <Center>\n          <Image src={CrackerSvg} w='14' />\n          <Box fontSize=\"xl\">登録商品数 {data.toLocaleString()} 点</Box>\n          <Image src={CrackerSvg} w='14' />\n        </Center>\n      ) : ''}\n      <Center>\n        <Box>商品随時追加中！</Box>\n      </Center>\n      <Box lineHeight=\"2.5em\" mt='6em'>\n        どれが自分に自分にあっているか分からない。<br />\n        商品があり過ぎて探すのが疲れる。<br />\n        悩みを解消できる商品を効率的に見つけたい。<br />\n        <br />\n        そのように考えた事はありませんか？<br />\n        ３つの質問に答えるだけで、あなたの合わせたランキングを紹介します!\n      </Box>\n      <Box mt='20' mb='7em'>\n        <Image src={ReadingSvg} />\n      </Box>\n      <Center>\n        <Link to=\"/question\">\n          <Button\n            className={styles.primaryBtn}\n            colorScheme=\"red500\"\n            height='65px'\n            width='200px'\n            size=\"lg\"\n          >\n            やってみる\n          </Button>\n        </Link>\n      </Center>\n      <Box mt=\"7em\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\" >\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n    </>\n  );\n};\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { Link } from '@chakra-ui/react'\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { SkeletonText } from \"@chakra-ui/skeleton\";\nimport { ArrowBackIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\n\nimport styles from \"../MainStyles.module.css\";\nimport { Image } from \"@chakra-ui/image\";\n\nexport const Product = () => {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/product/${id}`;\n  const fetcher = (arg) => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  let createdDate = \"\";\n  if (data && data.created_at) {\n    const date = new Date(data.created_at);\n    createdDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\n  }\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n  if (!data)\n    return (\n      <SkeletonText\n        mt=\"10\"\n        mb=\"10\"\n        pt=\"5\"\n        pb=\"5\"\n        startColor=\"red.300\"\n        endColor=\"red.100\"\n      ></SkeletonText>\n    );\n\n  return (\n    <>\n      <Box>\n        <Center as=\"h1\" fontSize=\"xl\">\n          商品詳細\n        </Center>\n        <Box mt='5' fontWeight=\"bold\">商品名</Box>\n        <Box>{data.name}</Box>\n        <Box p='10' className={styles.flexGrow}>\n          <Image\n            src={data.medium_image_url}\n            alt={data.name}\n            objectFit=\"contain\"\n            w=\"100%\"\n          />\n        </Box>\n        <Box>\n          <Box fontWeight=\"bold\">価格</Box>\n          <Box>\n            {data.price.toLocaleString(\"ja-JP\", {\n              style: \"currency\",\n              currency: \"JPY\",\n            })}\n          </Box>\n        </Box>\n        <Box mt='3'>\n          <Box fontWeight=\"bold\">登録日</Box>\n          <Box>{createdDate}</Box>\n        </Box>\n        <Box my='5' textAlign={'center'}>\n          <Link href={data.rakuten_url} isExternal={true} >\n            <Button colorScheme=\"red\" variant=\"outline\">\n              楽天で見る\n              <ExternalLinkIcon mx='2px' />\n            </Button>\n          </Link>\n        </Box>\n        <Box fontWeight=\"bold\">商品説明</Box>\n        <Box>{data.caption}</Box>\n      </Box>\n      <Center mt=\"10\">\n        <Link\n          size=\"lg\"\n          mb=\"10\"\n          variant=\"link\"\n          onClick={() => history.goBack()}\n        >\n          <ArrowBackIcon w=\"7\" h=\"7\" />\n          ランキングに戻る\n        </Link>\n      </Center>\n    </>\n  );\n};\n","import useSWR from \"swr\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { GridItem } from \"@chakra-ui/layout\";\nimport { Radio, RadioGroup } from \"@chakra-ui/radio\";\nimport { Center } from \"@chakra-ui/react\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { Grid } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n\nexport const CategoryRadio = (props) => {\n  const { category, setCategory, setCategories } = props;\n\n  const onChangeRadio = (e) => setCategory(e);\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/genre`;\n  const fetcher = (arg) => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  useEffect(() => {\n    if (data) setCategories(data);\n  }, [data, setCategories]);\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <FormControl isRequired mt=\"5\">\n      <FormLabel as=\"legend\" mb='5' borderBottom='solid 1px #ccc'>\n        どの種類の商品をお探しですか？\n      </FormLabel>\n      {data ? (\n        <RadioGroup\n          name='category'\n          value={category}\n          onChange={(e) => onChangeRadio(e)}\n        >\n          <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3} >\n            {data.map((genre) => (\n              <GridItem key={genre.id}>\n                <Radio value={genre[\"genre_id\"]} colorScheme='orange'>{genre[\"name\"]}</Radio>\n              </GridItem>\n            ))}\n          </Grid>\n        </RadioGroup>\n      ) : (\n        <Center align=\"center\">\n          <Spinner />\n        </Center>\n      )\n      }\n    </FormControl >\n  );\n};\n","import { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Radio, RadioGroup } from \"@chakra-ui/radio\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\n\nexport const PriceRadio = (props) => {\n  const { price, setPrice } = props;\n\n  const priceList = useMemo(() => ['1000', '2000', '3000', '5000', '7000', '10000', '20000'], []);\n\n  const onChangeRadio = (e) => setPrice(e);\n\n  return (\n    <FormControl mt=\"5\">\n      <FormLabel as=\"legend\" mb='5' borderBottom='solid 1px #ccc'>\n        ご予算はどれくらいですか？\n      </FormLabel>\n\n      <RadioGroup name='price' value={price} onChange={(e) => onChangeRadio(e)}>\n        <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3} >\n          {priceList.map((p) => (\n            <GridItem key={p}>\n              <Radio value={p} colorScheme='orange'\n              >～{Number(p).toLocaleString(\"ja-JP\", {\n                style: \"currency\",\n                currency: \"JPY\",\n              })}</Radio>\n            </GridItem>\n          ))}\n        </Grid>\n      </RadioGroup>\n    </FormControl>\n  );\n};\n","import useSWR from \"swr\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { Checkbox } from \"@chakra-ui/checkbox\";\nimport { Center } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\n\nexport const WorryCheckbox = (props) => {\n  const { worry, setWorry, setWorries } = props;\n\n  const onChangeCheckbox = (e) => {\n    const index = worry.indexOf(e.target.value);\n    let checked = [];\n    if (index < 0) {\n      checked = [...worry, e.target.value];\n      setWorry(checked);\n    } else {\n      checked = worry;\n      checked.splice(index, 1);\n      setWorry([...checked]);\n    }\n  };\n\n  const url = `${process.env.REACT_APP_BACKEND_HOST}api/effect`;\n  const fetcher = (arg) => fetch(arg).then((res) => res.json());\n  const { data, error } = useSWR(url, fetcher);\n\n  useEffect(() => {\n    if (data) setWorries(data);\n  }, [data, setWorries])\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  return (\n    <FormControl isRequired mt=\"5\">\n      <FormLabel as=\"legend\" mb='5' borderBottom='solid 1px #ccc'>\n        スキンケアに関してお悩みはありますか？\n      </FormLabel>\n      {data ? (\n        <Grid templateColumns=\"repeat(2, 1fr)\" columnGap={1} rowGap={3} >\n          {data.map((effect) => (\n            <GridItem\n              key={effect[\"id\"]}\n              value={worry}\n            >\n              <Checkbox\n                colorScheme='orange'\n                value={effect[\"id\"]}\n                onChange={onChangeCheckbox}\n                isChecked={worry.includes(String(effect[\"id\"]))}\n              >\n                {effect[\"name\"]}\n              </Checkbox>\n            </GridItem>\n          ))}\n        </Grid>\n      ) : (\n        <Center align=\"center\">\n          <Spinner />\n        </Center>\n      )}\n    </FormControl>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/undraw_choose.6957b11e.svg\";","import { useEffect, useState } from \"react\";\nimport { Center, Box, VStack } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Image } from \"@chakra-ui/image\";\n\nimport styles from \"../MainStyles.module.css\";\nimport { CategoryRadio } from \"./Forms/CategoryRadio\";\nimport { PriceRadio } from \"./Forms/PriceRadio\";\nimport { WorryCheckbox } from \"./Forms/WorryCheckbox\";\nimport ChooseSvg from '../svgs/undraw_choose.svg';\nimport CosmeImage from '../images/cosme.png'\n\nexport const QuestionForm = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const toast = useToast();\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState(\"\");\n  const [worry, setWorry] = useState([]);\n  const [worries, setWorries] = useState();\n  const [price, setPrice] = useState(\"\");\n\n  useEffect(() => {\n    if (location.state) {\n      if (location.state.genre) setCategory(location.state.genre);\n      if (location.state.price) setPrice(location.state.price);\n      if (location.state.effects) setWorry(location.state.effects);\n    }\n  }, [location]);\n\n  const checkAnswer = () => {\n    if (!category || !worry.length) {\n      toast({\n        status: 'warning',\n        variant: 'top-accent',\n        title: \"必須項目が未選択です。\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } else {\n      history.push({\n        pathname: \"/ranking\",\n        state: {\n          genre: category,\n          genreName: categories.find(cate => cate.genre_id === category).name,\n          effects: worry,\n          effectNames: worries.map(wo => worry.includes(String(wo.id)) && wo.name).filter(wo => wo),\n          price: price,\n        },\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box>\n        <Center as=\"h1\" my=\"3\" fontSize=\"1.5em\">\n          アンケートフォーム\n        </Center>\n        <Box my='3em'>\n          <Image src={ChooseSvg} my={10} w='100vw' objectFit='contain' />\n        </Box>\n        <VStack spacing={12}>\n          <CategoryRadio category={category} setCategory={setCategory} categories={categories} setCategories={setCategories} />\n          <WorryCheckbox worry={worry} setWorry={setWorry} setWorries={setWorries} />\n          <PriceRadio price={price} setPrice={setPrice} />\n        </VStack>\n      </Box>\n      <Center mt=\"5em\">\n        <Button\n          className={styles.primaryBtn}\n          colorScheme=\"red500\"\n          height='65px'\n          width='200px'\n          size=\"lg\"\n          onClick={checkAnswer}\n        >\n          回答する\n        </Button>\n      </Center>\n      <Box my=\"20\" position=\"relative\" left=\"50%\" transform=\"translateX(-50%)\" w=\"100vw\" >\n        <Image src={CosmeImage} h=\"80vw\" maxH=\"800px\" objectFit=\"cover\" m=\"0 auto\" />\n      </Box>\n    </>\n  );\n};\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Flex, Box, Link } from \"@chakra-ui/react\";\n\nexport const PaginateBtn = (props) => {\n  const { currentPage, lastPage, changePage } = props;\n\n  return (\n    <Flex justifyContent=\"space-between\">\n      {currentPage !== 1 ? <Link onClick={() => changePage(currentPage - 1)}><ChevronLeftIcon w='7' h='7' />前へ</Link> : <Box></Box>}\n      {currentPage < lastPage ? <Link onClick={() => changePage(currentPage + 1)}>次へ<ChevronRightIcon w='7' h='7' /></Link> : <Box></Box>}\n    </Flex>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.ac6a0467.png\";","export default __webpack_public_path__ + \"static/media/ranking1.69644418.svg\";","export default __webpack_public_path__ + \"static/media/ranking2.d72fce91.svg\";","export default __webpack_public_path__ + \"static/media/ranking3.0ce64a92.svg\";","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\nimport { Link as CLink } from \"@chakra-ui/layout\";\nimport { Box, Center, Flex } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\nimport { SkeletonText } from \"@chakra-ui/skeleton\";\nimport { Image } from \"@chakra-ui/image\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\n\nimport { PaginateBtn } from \"./PaginateBtn\";\nimport Logo from '..//images/logo.png';\nimport Ranking1 from '../svgs/ranking1.svg';\nimport Ranking2 from '../svgs/ranking2.svg';\nimport Ranking3 from '../svgs/ranking3.svg';\n\nexport const Ranking = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [data, setData] = useState([]);\n  const [currentData, setCurrentData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastPage, setLastPage] = useState(null);\n  const [error, setError] = useState(null);\n\n  const url = useMemo(\n    () => `${process.env.REACT_APP_BACKEND_HOST}api/ranking`,\n    []\n  );\n\n  const paramData = useMemo(() => {\n    return {\n      genre: location.state.genre,\n      effects: location.state.effects,\n      price: location.state.price,\n    };\n  }, [location]);\n  const param = useMemo(() => {\n    return {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(paramData),\n    };\n  }, [paramData]);\n\n  useEffect(() => {\n    fetch(url, param)\n      .then((res) => res.json())\n      .then((json) => {\n        setError(json.error);\n        setData(json.data);\n        setCurrentData(json.data.slice(0, process.env.REACT_APP_ITEM_PER_PAGE));\n        setLastPage(Math.floor(json.data.length / process.env.REACT_APP_ITEM_PER_PAGE))\n      })\n      .catch((err) => setError(err));\n  }, [url, param]);\n\n  const changePage = (page) => {\n    let current = [];\n    for (let key in data) {\n      if (key > (page - 1) * process.env.REACT_APP_ITEM_PER_PAGE && key <= page * process.env.REACT_APP_ITEM_PER_PAGE) current.push(data[key]);\n    }\n    setCurrentData(current);\n\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n\n  const goBack = () => {\n    history.push({\n      pathname: \"/question\",\n      state: {\n        genre: location.state.genre,\n        effects: location.state.effects,\n        price: location.state.price,\n      },\n    });\n  };\n\n  if (error) return <Center>データのアクセスに失敗しました。</Center>;\n\n  if (data.length === 0 && !error)\n    return (\n      <Box>\n        <Center>ランキング作成中です…</Center>\n        {[...Array(10)].map((value, index) => (\n          <SkeletonText\n            key={index}\n            mt=\"10\"\n            mb=\"10\"\n            pt=\"5\"\n            pb=\"5\"\n            startColor=\"red.300\"\n            endColor=\"red.100\"\n          ></SkeletonText>\n        ))}\n      </Box>\n    );\n\n  return (\n    <>\n      <Box>\n        <Center as=\"h1\" fontSize=\"xl\">\n          おすすめランキング\n        </Center>\n        <Box fontSize='sm' my='5'>\n          <Box fontWeight='bold'>回答内容</Box>\n          <Flex mx='1'><Box w='5em'>カテゴリ：</Box><Box>{location.state.genreName}</Box></Flex>\n          <Flex mx='1'><Box w='5em'>悩み：</Box><Box>{location.state.effectNames.join('/')}</Box></Flex>\n          <Flex mx='1'><Box w='5em'>ご予算：</Box><Box>〜{Number(location.state.price).toLocaleString(\"ja-JP\", {\n            style: \"currency\",\n            currency: \"JPY\",\n          })}</Box></Flex>\n        </Box>\n        {error ? error : \"\"}\n        {data.length === 0 ? (\n          <Center my=\"10\">該当なし</Center>\n        ) : (\n          <>\n            <Box fontSize={'sm'} mt='2'>\n              {data.length}件ヒットしました!\n            </Box>\n            <Box my='3'>\n              <PaginateBtn currentPage={currentPage} lastPage={lastPage} changePage={changePage} />\n            </Box>\n            <Box borderBottom='solid 1px #ccc' w='6em' textAlign='center' mx='auto' fontSize='sm'>\n              {(currentPage - 1) * process.env.REACT_APP_ITEM_PER_PAGE + 1}\n              〜\n              {currentPage * process.env.REACT_APP_ITEM_PER_PAGE} 位\n            </Box>\n            {currentData.map((item, index) => (\n              <Center key={index} my='12' maxW='30em' mx='auto'>\n                <Box ml=\"5\" maxW=\"30em\">\n                  <Flex mb='2' justifyContent='space-between' alignItems='center'>\n                    {currentPage === 1 && index === 0 ? (\n                      <Box><Image w='12' h='12' src={Ranking1} /></Box>\n                    ) : currentPage === 1 && index === 1 ? (\n                      <Box><Image w='10' h='10' src={Ranking2} /></Box>\n                    ) : currentPage === 1 && index === 2 ? (\n                      <Box><Image w='10' h='10' src={Ranking3} /></Box>\n                    ) : (\n                      <Box fontWeight='bold' >{(currentPage - 1) * process.env.REACT_APP_ITEM_PER_PAGE + index + 1} 位</Box>\n                    )}\n                  </Flex>\n                  <Box>{item.name}</Box>\n                  <Box textAlign='right'>\n                    <Link to={\"/product/\" + item.id}>\n                      <Button colorScheme=\"orange\" size=\"sm\" variant='link' >\n                        詳細を見る\n                      </Button>\n                    </Link>\n                  </Box>\n                  <Box mt='3' mb='1'>\n                    <Image\n                      src={item.small_image_url}\n                      fallbackSrc={Logo}\n                      alt={item.name}\n                      objectFit=\"contain\"\n                      w=\"100%\"\n                      h=\"10em\"\n                      borderRadius=\"lg\"\n                    />\n                  </Box>\n                  {item.recomend.map(reco => (\n                    <Box key={reco.ingredient} my='3'>\n                      <Box display='inline' background=\"gray.400\" fontWeight='bold' color=\"#fff\" py='1' px='3' mr='1' borderRadius='full'>{reco.effective}</Box>の対策におすすめ<br />\n                      <Box display='inline' borderBottom=\"2px solid orange\">{reco.ingredient}</Box> 配合\n                    </Box>\n                  ))}\n                  <Box fontSize=\"sm\" float='right'>\n                    {item.price.toLocaleString(\"ja-JP\", {\n                      style: \"currency\",\n                      currency: \"JPY\",\n                    })}\n                  </Box>\n                </Box>\n              </Center>\n            ))}\n            <Box mt='10'>\n              <PaginateBtn currentPage={currentPage} lastPage={lastPage} changePage={changePage} />\n            </Box>\n          </>\n        )}\n        <Center my=\"5em\">\n          <CLink\n            variant='link'\n            onClick={goBack}\n          >\n            <ArrowBackIcon w=\"5\" h=\"5\" verticalAlign='sub' fontSize='sm' />\n            アンケートフォームへ戻る\n          </CLink>\n        </Center>\n      </Box>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import { useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nexport const Tracking = (props) => {\n  const { listen } = useHistory();\n  const { trackingId } = props;\n\n  useEffect(() => {\n    const unlisten = listen((location) => {\n      if (!window.gtag) return\n      if (!trackingId) {\n        console.log(\n          'Tracking not enabled, as `trackingId` was not given and there is no `GA_MEASUREMENT_ID`.'\n        )\n        return\n      }\n      window.gtag('config', trackingId, { page_path: location.pathname })\n    })\n    return unlisten;\n  }, [trackingId, listen])\n\n  return null;\n};\n","import { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { ChakraProvider, Container, Center } from '@chakra-ui/react';\nimport { Image } from '@chakra-ui/image';\n\nimport styles from \"./MainStyles.module.css\";\nimport NotFound from './svgs/undraw_page_not_found.svg';\nimport { Header } from './components/Header';\nimport { Top } from './components/Top';\nimport { Product } from './components/Product';\nimport { QuestionForm } from './components/QuestionForm';\nimport { Ranking } from './components/Ranking';\nimport { ScrollToTop } from './components/ScrollToTop';\nimport { Tracking } from './components/Tracking';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Header />\n      <Container className={styles.mainFontStyle} w='100%'>\n        <BrowserRouter>\n          <Tracking trackingId='G-YNY7NS9MHW' />\n          <ScrollToTop/>\n          <Switch>\n            <Route exact path=\"/\">\n              <Top />\n            </Route>\n            <Route exact path=\"/question\">\n              <QuestionForm />\n            </Route>\n            <Route path=\"/ranking\">\n              <Ranking />\n            </Route>\n            <Route path=\"/product/:id\">\n              <Product />\n            </Route>\n            <Route path=\"*\">\n              <Center mt=\"20\">ページが見つかりません！</Center>\n              <Center mt=\"20\">\n                <Image src={NotFound} />\n              </Center>\n              <Center mt=\"20\">\n                <Link to=\"/\">トップへ</Link>\n              </Center>\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFontStyle\":\"MainStyles_mainFontStyle__1iDbE\",\"featureInactive\":\"MainStyles_featureInactive__3fVON\",\"nowrap\":\"MainStyles_nowrap__LBgJZ\",\"flexGrow\":\"MainStyles_flexGrow__3rUky\",\"topMessage\":\"MainStyles_topMessage__PIzrV\",\"primaryBtn\":\"MainStyles_primaryBtn__xauWd\"};"],"sourceRoot":""}